#!/usr/bin/env ruby
# vim: syn=ruby

require 'rubygems'
require 'parallel'

require File.expand_path("../../lib/multi_spork")
begin
  require File.expand_path(Dir.pwd, "config/multi_spork")
rescue
  puts "File config/multi_spork cannot be found. Use default number of test runner (i.e #{MultiSpork.config.runner_count})"
end

paths = []
runner_count = MultiSpork.runner_count

OptionParser.new do |opts|
  opts.summary_width = 28
  opts.banner = "Usage: multi_cuke [option] [feature_dir ...] [feature_file ...]"

  def opts.show_usage
    puts self
    exit 1
  end

  opts.on("-r COUNT", "--runner-count=COUNT", "Set number of runner count to COUNT. Default to value set by config/multi_spork of current directory or number of system processors") do |count|
    runner_count = count.to_i
  end

  opts.on_tail("-h", "--help", "Shows this help message") do
    opts.show_usage
  end

  opts.show_usage if ARGV.empty?

  begin
    opts.order(ARGV) do |path|
      paths << path
    end
  rescue OptionParser::ParseError => e
    opts.warn e.message
    opts.show_usage
  end
end

if runner_count > 0
  if paths.length > 0
    start = Time.now
    MultiSpork::TestExecutor.run_in_parallel(
      "bundle exec cucumber features/support features/step_definitions",
      MultiSpork::TestResolver.resolve(paths, ".feature"),
      runner_count
    )
    puts "Test run finished in #{Time.now - start} seconds"
  else
    warn "No features found in the given options"
    exit 1
  end
else
  warn "Runner count set to 0. Won't run test"
  exit 2
end
